class Store
types
		public String = seq of char;
values
-- TODO Define values here
instance variables
				private location : String;
				private inventory : set of Product;
				private transactions: seq of Transaction;
				private balance: real;
				inv balance >= 0;
				
operations	
		public Store: String * set of Product * seq of Transaction * real ==> Store
		Store(string, products, trans, bal) == (
			location := string;
			inventory := products;
			transactions := trans;
			balance := bal;
			return self);
		
		public addTransaction: Transaction ==> ()
		addTransaction(trans) == (
		
			if trans.getType() = <buy> then(
						transactions := [trans] ^ transactions;
						balance := balance + trans.getValue();
						removeFromInv({trans.getProduct()});
					) 		
			else if trans.getType() = <sell> then(
				balance := balance - trans.getValue();
				transactions := [trans] ^ transactions;
				addToInv({trans.getProduct()});
			)
		)
		pre balance - trans.getValue() >= 0 and 
				((trans.getType() = <buy> and trans.getProduct() in set inventory) or 
				trans.getType() = <sell>)
		post balance <> balance~ and 
				 transactions = transactions~ ^ [trans]
		;
		
		public addToInv : set of Product ==> ()
		addToInv(products) == (
			inventory := products union inventory;
		);
		
		public removeFromInv : set of Product ==> ()
		removeFromInv(products) == (
			inventory := inventory \ products;
		);
		
		public pure getLocation : () ==> String
			getLocation() == return location;
			
		public pure getTransactions : () ==> seq of Transaction
			getTransactions() == return transactions;
		
functions
-- TODO Define functiones here
traces
-- TODO Define Combinatorial Test Traces here
end Store