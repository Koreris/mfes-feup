class Store
types
		public String = seq of char;
values
-- TODO Define values here
instance variables
				private location : String;
				private inventory : set of Product;
				private transactions: seq of Transaction;
				private balance: real;
				
operations
		
		public Store: String * set of Product * seq of Transaction * real ==> Store
		Store(string, products, trans, bal) == (
			location := string;
			inventory := products;
			transactions := trans;
			balance := bal;
			return self);
		
		public addTransaction: Transaction ==> ()
		addTransaction(trans) == (
		
			--TODO: IF <BUY> CHECK IF PRODUCT EXISTS
			if trans.getType() = <buy> then(
					if trans.getProduct() in set inventory then(
						transactions := [trans] ^ transactions;
						IO`print("PRODUCT IN INVENTORY");
					)
					else(
						IO`print("PRODUCT NOT IN INVENTORY");
					);
			);
				
			--TODO: REMOVE/ADD PRODUCT FROM INVENTORY
		);
		
		
		
		public getLocation : () ==> String
			getLocation() == return location;
			
		public getTransactions : () ==> seq of Transaction
			getTransactions() == return transactions;
		
	
		
functions
-- TODO Define functiones here
traces
-- TODO Define Combinatorial Test Traces here
end Store