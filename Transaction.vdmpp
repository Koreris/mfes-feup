class Transaction

types
		-- this type identifies the type of transaction, which can only
		-- be buy (client buys) or sell (client sells)
		public type = <buy> | <sell> 
			inv type == type = <buy> or type = <sell>;

instance variables
		-- a transaction is characterised by the client and store involved, as well as
		-- the set of products, the type of transaction and its total value
		private client : Client;
		private store : Store;
		private products : set of Product;
		private transactionType : type;
		private value : real;
			
operations
    -- CONSTRUCTOR
		public Transaction: Client * Store * set of Product * type ==> Transaction
		Transaction(cli, str, prdt, t) == (
			value := 0;
			client := cli;
			store := str;
			products := prdt;
			transactionType := t;
			for all p in set prdt do (
					 value :=  value + p.getPrice().value;
				);
			return self);
		
		-- GETTERS	
		public pure getType : () ==> type
			getType() == return transactionType;
			
		public pure getProducts : () ==> set of Product
			getProducts() == return products;
			
		public pure getValue : () ==> real
			getValue() == return value;

end Transaction