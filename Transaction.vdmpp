class Transaction
types
		public type = <buy> | <sell> 
			inv type == type = <buy> or type = <sell>;
values
-- TODO Define values here
instance variables
			private client : Client;
			private store : Store;
			private products : set of Product;
			private transactionType : type;
			private value : int;
			
operations
		public Transaction: Client * Store * set of Product * type * int ==> Transaction
		Transaction(cli, str, prdt, t, val) == (
			client := cli;
			store := str;
			products := prdt;
			transactionType := t;
			value := val;
			return self);
			
			--storecut, clientcut...
		public pure getType : () ==> type
			getType() == return transactionType;
			
		public pure getProducts : () ==> set of Product
			getProducts() == return products;
			
		public pure getValue : () ==> int
			getValue() == return value;
			
			
functions
-- TODO Define functiones here
traces
-- TODO Define Combinatorial Test Traces here
end Transaction